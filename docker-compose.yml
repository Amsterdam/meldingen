services:
  meldingen:
    image: ${REGISTRY:-localhost:5000}/${REPOSITORY:-signalen/meldingen-backend}:${VERSION:-latest}
    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    command: ["fastapi", "dev", "--host", "0.0.0.0", "/opt/meldingen/meldingen/main.py"]
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      azurite:
        condition: service_healthy
      imgproxy:
        condition: service_healthy
      otel-collector:
        condition: service_started
      mail-service:
        condition: service_started
    volumes:
      - ".:/opt/meldingen"
    networks:
      - meldingen_network

  database:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_USER: meldingen
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: meldingen
    ports:
      - "54321:5432"
    volumes:
      - "./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
      - "pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "meldingen", "-U", "meldingen" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - meldingen_network

  keycloak:
    build:
      context: docker/keycloak
    image: ${REGISTRY:-localhost:5000}/${REPOSITORY:-signalen/keycloak}:${VERSION:-latest}
    command: ["/opt/keycloak/bin/kc.sh", "start-dev", "--http-port", "8002"]
    ports:
      - "8002:8002"
    volumes:
      - "./docker/keycloak/import:/import"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - meldingen_network

  docs:
    image: ${REGISTRY:-localhost:5000}/${REPOSITORY:-signalen/meldingen-backend}:${VERSION:-latest}
    ports:
      - "8001:8000"
    volumes:
      - ".:/opt/meldingen"
    entrypoint: mkdocs serve -f /opt/meldingen/mkdocs.yml --dev-addr=0.0.0.0:8000
    networks:
      - meldingen_network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000 --debug /var/log/azurite.log -l /opt/azurite/data
    ports:
      - "10000:10000"
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30
    volumes:
      - azurite:/opt/azurite/data
    networks:
      - meldingen_network

  imgproxy:
    image: darthsim/imgproxy
    ports:
      - "8081:8080"
    environment:
      IMGPROXY_KEY: "000000"
      IMGPROXY_SALT: "111111"
      IMGPROXY_USE_ABS: "true"
      IMGPROXY_ABS_NAME: devstoreaccount1
      IMGPROXY_ABS_KEY: Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
      IMGPROXY_ABS_ENDPOINT: http://azurite:10000/devstoreaccount1
      IMGPROXY_LOG_LEVEL: debug
      IMGPROXY_BASE_URL: abs://meldingencontainer/
      IMGPROXY_OPEN_TELEMETRY_ENABLE: "true"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    healthcheck:
      test: ["CMD", "imgproxy", "health"]
    networks:
      - meldingen_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.129.1
    depends_on:
      - jaeger
    ports:
      - "4317:4317"
    # To connect the collector to App Insights/Log Analytics, please specify the connection string
    # environment:
    #  APPLICATIONINSIGHTS_CONNECTION_STRING: InstrumentationKey=[redacted];IngestionEndpoint=https://westeurope-5.in.applicationinsights.azure.com/;LiveEndpoint=https://westeurope.livediagnostics.monitor.azure.com/;ApplicationId=[redacted]
    volumes:
      - ./docker/otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - meldingen_network

  jaeger:
    image: jaegertracing/jaeger:2.2.0
    ports:
      # ui
      - "16686:16686"
      # grpc
      - "14317:4317"
    environment:
      - LOG_LEVEL=debug
    networks:
      - meldingen_network

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - meldingen_network

  mail-service:
    image: amsterdam/amsterdam-mail-service:latest
    environment:
      PORT: 8003
      SMTP_HOST: mailpit
      SMTP_PORT: 1025
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    depends_on:
      - otel-collector
      - mailpit
    ports:
      - "8003:8003"
    networks:
      - meldingen_network

volumes:
    pgdata: ~
    azurite: ~
networks:
  meldingen_network:
    name: meldingen_network
    driver: bridge
