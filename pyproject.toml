[project]
name = "meldingen"
version = "0.1.0"
description = "The main meldingen project which includes the framework bindings."
authors = [
    {name = "Youri Westerman",email = "y.westerman@amsterdam.nl"},
    {name = "David van Buiten",email = "d.van.buiten@amsterdam.nl"},
    {name = "Ramon Hofmeister", email = "r.hofmeister@amsterdam.nl"},
    {name = "Joey Hendriks", email = "joey.hendriks@amsterdam.nl"}
]
readme = "README.md"
requires-python = "^3.13"

dependencies = [
    "alembic (>=1.14.1,<2.0.0)",
    "alembic-postgresql-enum (>=1.5.0,<2.0.0)",
    "amsterdam-mail-service-client @ git+https://github.com/Amsterdam/amsterdam-mail-service-client.git",
    "asgi-correlation-id (>=4.3.4,<5.0.0)",
    "asyncpg (>=0.30.0,<1.0.0)",
    "azure-storage-blob (>=12.25.1,<12.26.0)", # 12.26.0 is incompatible with Azurite 3.34.0, relax constraint once a compatible version of Azurite is released
    "fastapi[standard] (>=0.115.7,<1.0.0)",
    "geoalchemy2 (>=0.17.0,<1.0.0)",
    "geojson-pydantic (>=1.2.0,<2.0.0)",
    "httpx[http2] (>=0.28.1,<1.0.0)",
    "meldingen-core @ git+https://github.com/Amsterdam/meldingen-core.git@feature/add-function-to-get-backoffice-states",
    "mp-fsm @ git+https://github.com/Amsterdam/mp-fsm.git",
    "openai (>=1.99.1,<2.0.0)",
    "opentelemetry-exporter-otlp-proto-grpc (>=1.29.0,<2.0.0)",
    "opentelemetry-instrumentation-aiohttp-client (>=0.55b1,<1.0)",
    "opentelemetry-instrumentation-fastapi (>=0.55b1,<1.0)",
    "opentelemetry-instrumentation-httpx (>=0.55b1,<1.0)",
    "opentelemetry-instrumentation-sqlalchemy (>=0.55b1,<1.0)",
    "pdok-api-client @ git+https://github.com/Amsterdam/pdok-api-client.git",
    "phonenumbers (>=9.0.0,<9.1.0)",
    "pydantic-extra-types (>=2.10.2,<3.0.0)",
    "pydantic-jsonlogic @ git+https://github.com/Amsterdam/pydantic-jsonlogic.git",
    "pydantic-media-type @ git+https://github.com/Amsterdam/pydantic-media-type.git",
    "pydantic-settings (>=2.7.0,<3.0.0)",
    "pydantic[email] (>=2.10.6,<3.0.0)",
    "pyjwt[crypto] (>=2.10.1,<3.0.0)",
    "python-jsonlogic (>=0.1.0,<0.2.0)",
    "python-magic (>=0.4.27,<1.0.0)",
    "python-multipart (>=0.0.20,<1.0.0)",
    "shapely (>=2.0.6,<3.0.0)",
    "sqlalchemy[asyncio] (>=2.0.37,<3.0.0)"
]

[tool.poetry.group.dev.dependencies]
asgi-lifespan = "^2.1.0"
black = "^25.1.0"
filelock = "^3.17.0"
isort = "^6.0.0"
mailpit-api-client = {extras = ["pytest"], version = "^1.0.0"}
mkdocs-literate-nav = "^0.6.1"
mkdocs-material = "^9.6.16"
mkdocstrings = {version = "^0.30.0", extras = ["python"]}
mypy = "^1.17.1"
mypy-baseline = "^0.7.1"
pre-commit = "^4.1.0"
pytest = "^8.4.1"
pytest-alembic = "^0.12.1"
pytest-bdd = "^8.1.0"
pytest-cov = "^6.2.1"
pytest-xdist = {extras = ["psutil"], version = "^3.8.0"}
typer = {extras = ["all"], version = "^0.16.0"}
types-shapely = "^2.0.0.20241221"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py312']
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.env
  | \.venv
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_third_party = ["meldingen_core"]
known_first_party = ["meldingen"]
overwrite_in_place = true

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
strict = true

[tool.mypy-baseline]
baseline_path = "mypy-baseline.txt"

[tool.coverage.run]
concurrency = ["greenlet", "multiprocessing", "thread"]
omit = [
  "tests/*",
  "migrations/env.py",
  "meldingen/dependencies.py",
  "meldingen/database.py",
]

[tool.pytest.ini_options]
bdd_features_base_dir = "tests/scenarios/features"
